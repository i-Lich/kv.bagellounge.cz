'use strict';

/**
 * author Christopher Blum
 * - based on the idea of Remy Sharp, http://remysharp.com/2009/01/26/element-in-view-event-plugin/
 * - forked from http://github.com/zuk/jquery.inview/
 */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof exports?module.exports=a(require("jquery")):a(jQuery)}(function(a){function i(){var b,c,d={height:f.innerHeight,width:f.innerWidth};return d.height||(b=e.compatMode,(b||!a.support.boxModel)&&(c="CSS1Compat"===b?g:e.body,d={height:c.clientHeight,width:c.clientWidth})),d}function j(){return{top:f.pageYOffset||g.scrollTop||e.body.scrollTop,left:f.pageXOffset||g.scrollLeft||e.body.scrollLeft}}function k(){if(b.length){var e=0,f=a.map(b,function(a){var b=a.data.selector,c=a.$element;return b?c.find(b):c});for(c=c||i(),d=d||j();e<b.length;e++)if(a.contains(g,f[e][0])){var h=a(f[e]),k={height:h[0].offsetHeight,width:h[0].offsetWidth},l=h.offset(),m=h.data("inview");if(!d||!c)return;l.top+k.height>d.top&&l.top<d.top+c.height&&l.left+k.width>d.left&&l.left<d.left+c.width?m||h.data("inview",!0).trigger("inview",[!0]):m&&h.data("inview",!1).trigger("inview",[!1])}}}var c,d,h,b=[],e=document,f=window,g=e.documentElement;a.event.special.inview={add:function(c){b.push({data:c,$element:a(this),element:this}),!h&&b.length&&(h=setInterval(k,250))},remove:function(a){for(var c=0;c<b.length;c++){var d=b[c];if(d.element===this&&d.data.guid===a.guid){b.splice(c,1);break}}b.length||(clearInterval(h),h=null)}},a(f).on("scroll resize scrollstop",function(){c=d=null}),!g.addEventListener&&g.attachEvent&&g.attachEvent("onfocusin",function(){d=null})});

//jquery.validate
(function(t){t.extend(t.fn,{validate:function(e){if(!this.length)return e&&e.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing."),void 0;var i=t.data(this[0],"validator");return i?i:(this.attr("novalidate","novalidate"),i=new t.validator(e,this[0]),t.data(this[0],"validator",i),i.settings.onsubmit&&(this.validateDelegate(":submit","click",function(e){i.settings.submitHandler&&(i.submitButton=e.target),t(e.target).hasClass("cancel")&&(i.cancelSubmit=!0),void 0!==t(e.target).attr("formnovalidate")&&(i.cancelSubmit=!0)}),this.submit(function(e){function s(){var s;return i.settings.submitHandler?(i.submitButton&&(s=t("<input type='hidden'/>").attr("name",i.submitButton.name).val(t(i.submitButton).val()).appendTo(i.currentForm)),i.settings.submitHandler.call(i,i.currentForm,e),i.submitButton&&s.remove(),!1):!0}return i.settings.debug&&e.preventDefault(),i.cancelSubmit?(i.cancelSubmit=!1,s()):i.form()?i.pendingRequest?(i.formSubmitted=!0,!1):s():(i.focusInvalid(),!1)})),i)},valid:function(){if(t(this[0]).is("form"))return this.validate().form();var e=!0,i=t(this[0].form).validate();return this.each(function(){e=e&&i.element(this)}),e},removeAttrs:function(e){var i={},s=this;return t.each(e.split(/\s/),function(t,e){i[e]=s.attr(e),s.removeAttr(e)}),i},rules:function(e,i){var s=this[0];if(e){var r=t.data(s.form,"validator").settings,n=r.rules,a=t.validator.staticRules(s);switch(e){case"add":t.extend(a,t.validator.normalizeRule(i)),delete a.messages,n[s.name]=a,i.messages&&(r.messages[s.name]=t.extend(r.messages[s.name],i.messages));break;case"remove":if(!i)return delete n[s.name],a;var u={};return t.each(i.split(/\s/),function(t,e){u[e]=a[e],delete a[e]}),u}}var o=t.validator.normalizeRules(t.extend({},t.validator.classRules(s),t.validator.attributeRules(s),t.validator.dataRules(s),t.validator.staticRules(s)),s);if(o.required){var l=o.required;delete o.required,o=t.extend({required:l},o)}return o}}),t.extend(t.expr[":"],{blank:function(e){return!t.trim(""+t(e).val())},filled:function(e){return!!t.trim(""+t(e).val())},unchecked:function(e){return!t(e).prop("checked")}}),t.validator=function(e,i){this.settings=t.extend(!0,{},t.validator.defaults,e),this.currentForm=i,this.init()},t.validator.format=function(e,i){return 1===arguments.length?function(){var i=t.makeArray(arguments);return i.unshift(e),t.validator.format.apply(this,i)}:(arguments.length>2&&i.constructor!==Array&&(i=t.makeArray(arguments).slice(1)),i.constructor!==Array&&(i=[i]),t.each(i,function(t,i){e=e.replace(RegExp("\\{"+t+"\\}","g"),function(){return i})}),e)},t.extend(t.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",validClass:"valid",errorElement:"label",focusInvalid:!0,errorContainer:t([]),errorLabelContainer:t([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(t){this.lastActive=t,this.settings.focusCleanup&&!this.blockFocusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,t,this.settings.errorClass,this.settings.validClass),this.addWrapper(this.errorsFor(t)).hide())},onfocusout:function(t){this.checkable(t)||!(t.name in this.submitted)&&this.optional(t)||this.element(t)},onkeyup:function(t,e){(9!==e.which||""!==this.elementValue(t))&&(t.name in this.submitted||t===this.lastElement)&&this.element(t)},onclick:function(t){t.name in this.submitted?this.element(t):t.parentNode.name in this.submitted&&this.element(t.parentNode)},highlight:function(e,i,s){"radio"===e.type?this.findByName(e.name).addClass(i).removeClass(s):t(e).addClass(i).removeClass(s)},unhighlight:function(e,i,s){"radio"===e.type?this.findByName(e.name).removeClass(i).addClass(s):t(e).removeClass(i).addClass(s)}},setDefaults:function(e){t.extend(t.validator.defaults,e)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date (ISO).",number:"Please enter a valid number.",digits:"Please enter only digits.",creditcard:"Please enter a valid credit card number.",equalTo:"Please enter the same value again.",maxlength:t.validator.format("Please enter no more than {0} characters."),minlength:t.validator.format("Please enter at least {0} characters."),rangelength:t.validator.format("Please enter a value between {0} and {1} characters long."),range:t.validator.format("Please enter a value between {0} and {1}."),max:t.validator.format("Please enter a value less than or equal to {0}."),min:t.validator.format("Please enter a value greater than or equal to {0}.")},autoCreateRanges:!1,prototype:{init:function(){function e(e){var i=t.data(this[0].form,"validator"),s="on"+e.type.replace(/^validate/,"");i.settings[s]&&i.settings[s].call(i,this[0],e)}this.labelContainer=t(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||t(this.currentForm),this.containers=t(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var i=this.groups={};t.each(this.settings.groups,function(e,s){"string"==typeof s&&(s=s.split(/\s/)),t.each(s,function(t,s){i[s]=e})});var s=this.settings.rules;t.each(s,function(e,i){s[e]=t.validator.normalizeRule(i)}),t(this.currentForm).validateDelegate(":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'] ,[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'] ","focusin focusout keyup",e).validateDelegate("[type='radio'], [type='checkbox'], select, option","click",e),this.settings.invalidHandler&&t(this.currentForm).bind("invalid-form.validate",this.settings.invalidHandler)},form:function(){return this.checkForm(),t.extend(this.submitted,this.errorMap),this.invalid=t.extend({},this.errorMap),this.valid()||t(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var t=0,e=this.currentElements=this.elements();e[t];t++)this.check(e[t]);return this.valid()},element:function(e){e=this.validationTargetFor(this.clean(e)),this.lastElement=e,this.prepareElement(e),this.currentElements=t(e);var i=this.check(e)!==!1;return i?delete this.invalid[e.name]:this.invalid[e.name]=!0,this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),i},showErrors:function(e){if(e){t.extend(this.errorMap,e),this.errorList=[];for(var i in e)this.errorList.push({message:e[i],element:this.findByName(i)[0]});this.successList=t.grep(this.successList,function(t){return!(t.name in e)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){t.fn.resetForm&&t(this.currentForm).resetForm(),this.submitted={},this.lastElement=null,this.prepareForm(),this.hideErrors(),this.elements().removeClass(this.settings.errorClass).removeData("previousValue")},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(t){var e=0;for(var i in t)e++;return e},hideErrors:function(){this.addWrapper(this.toHide).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{t(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(e){}},findLastActive:function(){var e=this.lastActive;return e&&1===t.grep(this.errorList,function(t){return t.element.name===e.name}).length&&e},elements:function(){var e=this,i={};return t(this.currentForm).find("input, select, textarea").not(":submit, :reset, :image, [disabled]").not(this.settings.ignore).filter(function(){return!this.name&&e.settings.debug&&window.console&&console.error("%o has no name assigned",this),this.name in i||!e.objectLength(t(this).rules())?!1:(i[this.name]=!0,!0)})},clean:function(e){return t(e)[0]},errors:function(){var e=this.settings.errorClass.replace(" ",".");return t(this.settings.errorElement+"."+e,this.errorContext)},reset:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=t([]),this.toHide=t([]),this.currentElements=t([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(t){this.reset(),this.toHide=this.errorsFor(t)},elementValue:function(e){var i=t(e).attr("type"),s=t(e).val();return"radio"===i||"checkbox"===i?t("input[name='"+t(e).attr("name")+"']:checked").val():"string"==typeof s?s.replace(/\r/g,""):s},check:function(e){e=this.validationTargetFor(this.clean(e));var i,s=t(e).rules(),r=!1,n=this.elementValue(e);for(var a in s){var u={method:a,parameters:s[a]};try{if(i=t.validator.methods[a].call(this,n,e,u.parameters),"dependency-mismatch"===i){r=!0;continue}if(r=!1,"pending"===i)return this.toHide=this.toHide.not(this.errorsFor(e)),void 0;if(!i)return this.formatAndAdd(e,u),!1}catch(o){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+e.id+", check the '"+u.method+"' method.",o),o}}return r?void 0:(this.objectLength(s)&&this.successList.push(e),!0)},customDataMessage:function(e,i){return t(e).data("msg-"+i.toLowerCase())||e.attributes&&t(e).attr("data-msg-"+i.toLowerCase())},customMessage:function(t,e){var i=this.settings.messages[t];return i&&(i.constructor===String?i:i[e])},findDefined:function(){for(var t=0;arguments.length>t;t++)if(void 0!==arguments[t])return arguments[t];return void 0},defaultMessage:function(e,i){return this.findDefined(this.customMessage(e.name,i),this.customDataMessage(e,i),!this.settings.ignoreTitle&&e.title||void 0,t.validator.messages[i],"<strong>Warning: No message defined for "+e.name+"</strong>")},formatAndAdd:function(e,i){var s=this.defaultMessage(e,i.method),r=/\$?\{(\d+)\}/g;"function"==typeof s?s=s.call(this,i.parameters,e):r.test(s)&&(s=t.validator.format(s.replace(r,"{$1}"),i.parameters)),this.errorList.push({message:s,element:e}),this.errorMap[e.name]=s,this.submitted[e.name]=s},addWrapper:function(t){return this.settings.wrapper&&(t=t.add(t.parent(this.settings.wrapper))),t},defaultShowErrors:function(){var t,e;for(t=0;this.errorList[t];t++){var i=this.errorList[t];this.settings.highlight&&this.settings.highlight.call(this,i.element,this.settings.errorClass,this.settings.validClass),this.showLabel(i.element,i.message)}if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(t=0;this.successList[t];t++)this.showLabel(this.successList[t]);if(this.settings.unhighlight)for(t=0,e=this.validElements();e[t];t++)this.settings.unhighlight.call(this,e[t],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return t(this.errorList).map(function(){return this.element})},showLabel:function(e,i){var s=this.errorsFor(e);s.length?(s.removeClass(this.settings.validClass).addClass(this.settings.errorClass),s.html(i)):(s=t("<"+this.settings.errorElement+">").attr("for",this.idOrName(e)).addClass(this.settings.errorClass).html(i||""),this.settings.wrapper&&(s=s.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.append(s).length||(this.settings.errorPlacement?this.settings.errorPlacement(s,t(e)):s.insertAfter(e))),!i&&this.settings.success&&(s.text(""),"string"==typeof this.settings.success?s.addClass(this.settings.success):this.settings.success(s,e)),this.toShow=this.toShow.add(s)},errorsFor:function(e){var i=this.idOrName(e);return this.errors().filter(function(){return t(this).attr("for")===i})},idOrName:function(t){return this.groups[t.name]||(this.checkable(t)?t.name:t.id||t.name)},validationTargetFor:function(t){return this.checkable(t)&&(t=this.findByName(t.name).not(this.settings.ignore)[0]),t},checkable:function(t){return/radio|checkbox/i.test(t.type)},findByName:function(e){return t(this.currentForm).find("[name='"+e+"']")},getLength:function(e,i){switch(i.nodeName.toLowerCase()){case"select":return t("option:selected",i).length;case"input":if(this.checkable(i))return this.findByName(i.name).filter(":checked").length}return e.length},depend:function(t,e){return this.dependTypes[typeof t]?this.dependTypes[typeof t](t,e):!0},dependTypes:{"boolean":function(t){return t},string:function(e,i){return!!t(e,i.form).length},"function":function(t,e){return t(e)}},optional:function(e){var i=this.elementValue(e);return!t.validator.methods.required.call(this,i,e)&&"dependency-mismatch"},startRequest:function(t){this.pending[t.name]||(this.pendingRequest++,this.pending[t.name]=!0)},stopRequest:function(e,i){this.pendingRequest--,0>this.pendingRequest&&(this.pendingRequest=0),delete this.pending[e.name],i&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(t(this.currentForm).submit(),this.formSubmitted=!1):!i&&0===this.pendingRequest&&this.formSubmitted&&(t(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(e){return t.data(e,"previousValue")||t.data(e,"previousValue",{old:null,valid:!0,message:this.defaultMessage(e,"remote")})}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(e,i){e.constructor===String?this.classRuleSettings[e]=i:t.extend(this.classRuleSettings,e)},classRules:function(e){var i={},s=t(e).attr("class");return s&&t.each(s.split(" "),function(){this in t.validator.classRuleSettings&&t.extend(i,t.validator.classRuleSettings[this])}),i},attributeRules:function(e){var i={},s=t(e),r=s[0].getAttribute("type");for(var n in t.validator.methods){var a;"required"===n?(a=s.get(0).getAttribute(n),""===a&&(a=!0),a=!!a):a=s.attr(n),/min|max/.test(n)&&(null===r||/number|range|text/.test(r))&&(a=Number(a)),a?i[n]=a:r===n&&"range"!==r&&(i[n]=!0)}return i.maxlength&&/-1|2147483647|524288/.test(i.maxlength)&&delete i.maxlength,i},dataRules:function(e){var i,s,r={},n=t(e);for(i in t.validator.methods)s=n.data("rule-"+i.toLowerCase()),void 0!==s&&(r[i]=s);return r},staticRules:function(e){var i={},s=t.data(e.form,"validator");return s.settings.rules&&(i=t.validator.normalizeRule(s.settings.rules[e.name])||{}),i},normalizeRules:function(e,i){return t.each(e,function(s,r){if(r===!1)return delete e[s],void 0;if(r.param||r.depends){var n=!0;switch(typeof r.depends){case"string":n=!!t(r.depends,i.form).length;break;case"function":n=r.depends.call(i,i)}n?e[s]=void 0!==r.param?r.param:!0:delete e[s]}}),t.each(e,function(s,r){e[s]=t.isFunction(r)?r(i):r}),t.each(["minlength","maxlength"],function(){e[this]&&(e[this]=Number(e[this]))}),t.each(["rangelength","range"],function(){var i;e[this]&&(t.isArray(e[this])?e[this]=[Number(e[this][0]),Number(e[this][1])]:"string"==typeof e[this]&&(i=e[this].split(/[\s,]+/),e[this]=[Number(i[0]),Number(i[1])]))}),t.validator.autoCreateRanges&&(e.min&&e.max&&(e.range=[e.min,e.max],delete e.min,delete e.max),e.minlength&&e.maxlength&&(e.rangelength=[e.minlength,e.maxlength],delete e.minlength,delete e.maxlength)),e},normalizeRule:function(e){if("string"==typeof e){var i={};t.each(e.split(/\s/),function(){i[this]=!0}),e=i}return e},addMethod:function(e,i,s){t.validator.methods[e]=i,t.validator.messages[e]=void 0!==s?s:t.validator.messages[e],3>i.length&&t.validator.addClassRules(e,t.validator.normalizeRule(e))},methods:{required:function(e,i,s){if(!this.depend(s,i))return"dependency-mismatch";if("select"===i.nodeName.toLowerCase()){var r=t(i).val();return r&&r.length>0}return this.checkable(i)?this.getLength(e,i)>0:t.trim(e).length>0},email:function(t,e){return this.optional(e)||/^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i.test(t)},url:function(t,e){return this.optional(e)||/^(https?|s?ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(t)},date:function(t,e){return this.optional(e)||!/Invalid|NaN/.test(""+new Date(t))},dateISO:function(t,e){return this.optional(e)||/^\d{4}[\/\-]\d{1,2}[\/\-]\d{1,2}$/.test(t)},number:function(t,e){return this.optional(e)||/^-?(?:\d+|\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t)},digits:function(t,e){return this.optional(e)||/^\d+$/.test(t)},creditcard:function(t,e){if(this.optional(e))return"dependency-mismatch";if(/[^0-9 \-]+/.test(t))return!1;var i=0,s=0,r=!1;t=t.replace(/\D/g,"");for(var n=t.length-1;n>=0;n--){var a=t.charAt(n);s=parseInt(a,10),r&&(s*=2)>9&&(s-=9),i+=s,r=!r}return 0===i%10},minlength:function(e,i,s){var r=t.isArray(e)?e.length:this.getLength(t.trim(e),i);return this.optional(i)||r>=s},maxlength:function(e,i,s){var r=t.isArray(e)?e.length:this.getLength(t.trim(e),i);return this.optional(i)||s>=r},rangelength:function(e,i,s){var r=t.isArray(e)?e.length:this.getLength(t.trim(e),i);return this.optional(i)||r>=s[0]&&s[1]>=r},min:function(t,e,i){return this.optional(e)||t>=i},max:function(t,e,i){return this.optional(e)||i>=t},range:function(t,e,i){return this.optional(e)||t>=i[0]&&i[1]>=t},equalTo:function(e,i,s){var r=t(s);return this.settings.onfocusout&&r.unbind(".validate-equalTo").bind("blur.validate-equalTo",function(){t(i).valid()}),e===r.val()},remote:function(e,i,s){if(this.optional(i))return"dependency-mismatch";var r=this.previousValue(i);if(this.settings.messages[i.name]||(this.settings.messages[i.name]={}),r.originalMessage=this.settings.messages[i.name].remote,this.settings.messages[i.name].remote=r.message,s="string"==typeof s&&{url:s}||s,r.old===e)return r.valid;r.old=e;var n=this;this.startRequest(i);var a={};return a[i.name]=e,t.ajax(t.extend(!0,{url:s,mode:"abort",port:"validate"+i.name,dataType:"json",data:a,success:function(s){n.settings.messages[i.name].remote=r.originalMessage;var a=s===!0||"true"===s;if(a){var u=n.formSubmitted;n.prepareElement(i),n.formSubmitted=u,n.successList.push(i),delete n.invalid[i.name],n.showErrors()}else{var o={},l=s||n.defaultMessage(i,"remote");o[i.name]=r.message=t.isFunction(l)?l(e):l,n.invalid[i.name]=!0,n.showErrors(o)}r.valid=a,n.stopRequest(i,a)}},s)),"pending"}}}),t.format=t.validator.format})(jQuery),function(t){var e={};if(t.ajaxPrefilter)t.ajaxPrefilter(function(t,i,s){var r=t.port;"abort"===t.mode&&(e[r]&&e[r].abort(),e[r]=s)});else{var i=t.ajax;t.ajax=function(s){var r=("mode"in s?s:t.ajaxSettings).mode,n=("port"in s?s:t.ajaxSettings).port;return"abort"===r?(e[n]&&e[n].abort(),e[n]=i.apply(this,arguments),e[n]):i.apply(this,arguments)}}}(jQuery),function(t){t.extend(t.fn,{validateDelegate:function(e,i,s){return this.bind(i,function(i){var r=t(i.target);return r.is(e)?s.apply(r,arguments):void 0})}})}(jQuery);

jQuery(function($) {

    window.form_adjuster = {
        init: function(options) {
            this.options = options;
            this.init_cache();
            this.init_validation();
            this.init_mask();
            this.btn_reset_init();

            if (this.options['file']) {
                //this.build_file_structure();
                this.check_file();
                this.input_file_reset();
            }

            this.send_validation();
            this.init_btn_no_ajax();
            this.init_ajax_without_form();
            this.number_only_init();
        },

        init_options: function() {
            var default_handler_url = window.wp_data ? window.wp_data : false,
                default_settings = {
                    'type': 'POST',
                    'handler': default_handler_url.sau_sender_ajax_url ? default_handler_url.sau_sender_ajax_url : './form-handler.php',
                    'dataType': 'json',
                    'contentType': false,
                    'processData': false,
                    'task':'task',

                    //file
                    'file': false, //not finished yet
                    'max_weight':8388608,
                    //callbacks for file
                    'onload': false,
                    //classes for input type file
                    //.js-file-preview - for preview

                    //callbacks success,error for ajax
                    'success': false,
                    'error': false
                };
            return this.options ? $.extend(default_settings, this.options) : default_settings
        },

        init_cache: function(options) {
            this.options = this.init_options();
            this.$input_phone = $('.userphone');
            this.$input_date = $('.js-input-date');
            this.$form = $('form:not(.js-no-ajax)');
            this.$noajax_btn = $('.js-noajax-btn');
            this.$number_only = $('.js-number-only');
            this.$btn_form_reset = $('.js-form-reset');

            //file
            this.$file_input = $('.js-file-check');

            //ajax without form
            //parameters: data-json="{'action':'foo','parameters':'bar'}"
            this.$btn_without_form = $('.js-single-button');
        },

        init_validation: function() {
            $.validator.addMethod(
                'regexp',
                function(value, element, regexp) {
                    var re = new RegExp(regexp);
                    return this.optional(element) || re.test(value);
                },
                "Please check your input."
            );


            $.validator.addClassRules({
                userphone: {
                    minlength: 6,
                    regexp: '[^_]+$'
                },
                usermail: {
                    email: true,
                    required: true
                },
                required: {
                    required: true
                },
                password:{
                    minlength:6
                },
                passwordConfirm:{
                    minlength:6,
                    equalTo:'.js-input-new-password'
                }
            });

        },

        init_mask: function() {
            // this.$input_phone.inputmask({ "mask": "+7(999)999-99-99",showMaskOnHover: false });
            //this.$input_date.inputmask({"mask":"00/00/0000",showMaskOnHover: false });
        },

        //send form with custom ajax
        form_send: function(formObject, action) {
            var settings = form_adjuster.options;

            //formObject - formData,
            //action - action for handler
            //form_adjuster.$form_cur - current form
            $.ajax({
                type: settings['type'],
                url: settings['handler'],
                //full url in global variable wp_data.sau_sender_ajax_url
                // + "?action=" + (action ? action : "sau_send_mail"),
                dataType: settings['dataType'],
                contentType: settings['contentType'],
                processData: settings['processData'],
                data: formObject,
                success: function() {
                    if (settings['success']) {
                        settings['success']();
                    } else {
                        form_adjuster.ajax_success();
                    }

                    form_adjuster.$form_cur = false;
                },
                error: function() {
                    if (settings['error']) {
                        settings['error']();
                    } else {
                        form_adjuster.ajax_error();
                    }

                    form_adjuster.$form_cur = false;
                }
            });
        },

        ajax_success: function() {
            console.log('success');

            if (form_adjuster.$form_cur) {
                form_adjuster.$form_cur.trigger('reset');
                //doing smth
            }
        },

        ajax_error: function() {
            console.log('error');
        },

        //assembly form with formData
        formData_assembly: function(form) {
            var formSendAll = new FormData(),
                formdata = {},
                form_arr,
                $form = $(form),
                $fields = $form.find(':input,select,textarea'),
                pos_arr = [];

            form_arr = $fields.serializeArray();

            for (var i = 0; i < form_arr.length; i++) {
                if (form_arr[i].value.length > 0) {

                    var $current_input = $fields.filter('[name=' + form_arr[i].name + ']'),
                        value_arr = {};

                    if ($current_input.attr('type') != 'hidden' && !$current_input.hasClass('js-system-field')) {
                        var title = $current_input.attr('data-title');

                        value_arr['value'] = form_arr[i].value;
                        value_arr['title'] = title;
                        formdata[form_arr[i].name] = value_arr;

                    } else {
                        if(!$current_input.hasClass('js-system-field')){
                            formSendAll.append(form_arr[i].name, form_arr[i].value);
                        }
                    }
                }
            }

            if (pos_arr.length > 0){
                formdata['position'] = pos_arr;
            }

            formSendAll.append('formData', JSON.stringify(formdata));

            //file
            if (form_adjuster.options['file']) {
                var $input_file = $(form).find('.js-file-check');

                if ($input_file.length > 0) {
                    $input_file.each(function() {
                        var $input_cur = $(this),
                            val_length = $input_cur.val().length,
                            multy = $input_cur.prop('multiple');

                        if (val_length > 0) {
                            if (!multy) {
                                formSendAll.append($input_cur.attr('name'), $input_cur[0].files[0]);
                            } else {
                                form_adjuster.collect_multiple_file(formSendAll, $input_cur);
                            }
                        }
                    })
                }
            }

            this.form_send(formSendAll, false);
        },

        collect_multiple_file: function(data, $input) {
            var $wrapper = $input.closest('.js-file-module'),
                $list = $wrapper.find('.js-file-list');

            $('.js-file-list li').each(function() {
                var file_name = $(this).attr('data-name');

                for (var i = 0; i < $input[0].files.length; i++) {

                    if (file_name == $input[0].files[i].name) {

                        data.append($input.attr('name'), $input[0].files[i]);
                    }
                }
            })
        },

        //file reader and handlers
        check_file: function() {
            var reader;

            function abortRead() {
                reader.abort();
            }

            function errorHandler(evt) {
                switch (evt.target.error.code) {
                    case evt.target.error.NOT_FOUND_ERR:
                        alert('File Not Found!');
                        break;
                    case evt.target.error.NOT_READABLE_ERR:
                        alert('File is not readable');
                        break;
                    case evt.target.error.ABORT_ERR:
                        break; // noop
                    default:
                        alert('An error occurred reading this file.');
                };
            }

            function handleFileSelect(evt) {
                var $input = $(this);

                for (var i = 0; i < $input[0].files.length; i++) {
                    reader_file($input[0].files[i], $input);
                }
            }

            function reader_file(file, $input) {
                var reader = new FileReader(),
                    file_name = file.name;

                reader.file_name = file_name;
                reader.onerror = errorHandler;

                reader.onabort = function(e) {
                    alert('File read cancelled');
                };

                reader.onload = function(event) {
                    if (form_adjuster.options['onload']) {
                        form_adjuster.options['onload']();
                    } else {
                        if($input[0].files[0].size * 8 < form_adjuster.options.max_weight){
                            form_adjuster.file_onload($input,reader);
                        }
                        else{
                            alert('Файл больше 2 мб.');
                        }
                    }
                };

                reader.onprogress = function(event) {
                    //progress bar
                    // if (event.lengthComputable) {
                    //     var percent = parseInt(((event.loaded / event.total) * 100), 10),
                    //         $bar = $wrapper.find('.js-upload-progressbar');

                    //     $bar.css('width', percent + '%');
                    // }
                };

                reader.readAsDataURL(file);
            }

            form_adjuster.$file_input.on('change', handleFileSelect);
        },

        file_onload: function($input,reader) {
            var $module = $input.closest('.js-file-module'),
                $list = $module.find('.js-file-preview-list'),
                $input_block = $module.find('.js-file-input-list');

            if(!$module.hasClass('_onload')){
                $module.addClass('_onload');
            }

            // $list.append('<div class="object-fit-wrap" data-name="' +
            //     reader.file_name + '"><div class="object-fit-wrap__img-wrapper"><img class="object-fit-wrap__img js-file-preview" src="' +
            //     reader.result + '"/></div><i class="file-onload-block__icon-reset fa fa-times js-file-reset"></i></div>');

            $list.append('<div class="new-file-wrap" data-name="'+  reader.file_name + '"><i class="file-remove fa fa-times js-file-reset"></i><div class="file-name"> ' +  reader.file_name  + '</div></div>')

            var $img = $module.find('js-file-preview'),
                $previews = $module.find('.object-fit-wrap');

            // $.fn.objectFitImages($img);

            $input_block.append($input.clone(true).removeClass('js-file-start').val(''));

            if($previews.length > 5){
                $module.addClass('_full');
            }

        },

        build_file_structure: function() {
            form_adjuster.$file_input.each(function() {
                var $input = $(this),
                    params = $input.data('params');

                params = params ? params : {};

                $input.wrap('<div class="upload-wrapper js-upload-wrapper' +
                    (params.mod ? " upload-wrapper_" + params.mod : "") + '"></div>')
                    .after('<span class="upload-wrapper__label"><span class="upload-wrapper__text js-upload-text">' +
                        (params.label ? params.label : 'Изменить') + '</span>' +
                        (params.mod === 'simple' ? '<span class="cross-btn js-file-reset"></span>' : '') + '</span>');
            })
        },

        //reset input type file with save all handlers
        input_file_reset: function() {
            $(document).on('click', '.js-file-reset', function() {
                console.log('click')
                var $btn = $(this),
                    $item = $btn.closest('.new-file-wrap'),
                    name = $item.data('name'),
                    $module = $item.closest('.js-file-module'),
                    $inputs = $module.find('.js-file-check');

                $inputs.each(function(){
                    var $cur_input = $(this);

                    if($cur_input.val().indexOf(name) > 0){
                        if(!$cur_input.hasClass('js-file-start')){
                            $cur_input.remove();
                        }
                        else{
                            var $input_block = $module.find('.js-file-input-list');

                            $input_block.append($cur_input.clone(true).removeClass('js-file-start').val(''));
                            $cur_input.replaceWith($cur_input.clone(true).val(''));

                        }
                    }
                });

                $item.addClass('_remove');
                $item.remove();
                // setTimeout(function(){
                //     $item.remove();
                //
                //     var $items = $module.find('.object-fit-wrap');
                //
                //     if(!$items.length){
                //         var $inputs = $module.find('.js-file-check:not(.js-file-start)');
                //
                //         $inputs.remove();
                //         $module.removeClass('_onload');
                //     }
                //
                //     if($items.length < 6 && $module.hasClass('_full')){
                //         $module.removeClass('_full');
                //     }
                // },300);
            });
        },

        btn_reset_init:function(){
            this.$btn_form_reset.click(function(e){
                e.preventDefault();

                var $btn = $(this),
                    $form = $btn.closest('form');

                form_adjuster.form_reset($form);
            });


        },

        form_reset:function($form){
            var $inputs = $form.find('input:not([type=file]),textarea'),
                $file_modules = $form.find('.js-file-module'),
                $stars = $form.find('.js-star-item'),
                $select =  $form.find('.js-custom-select');

            $form.trigger('reset');
            $inputs.removeClass('_active active error valid');

            if($stars.length){
                var $star_input = $stars.find('.js-star-input');

                $star_input.removeAttr('checked');
                $stars.add($star_input).removeClass('_active');
            }

            $select.each(function(){
                var $select_item = $(this),
                    $options = $select_item.siblings('.js-select-inner').find('.js-option'),
                    $input = $select_item.siblings('.js-hidden-input'),
                    default_val = $options.eq(0).find('.text').text().trim(),
                    $placeholder = $select_item.children('span');

                $input.val(default_val);
                $placeholder.text(default_val);
                $options.not(':first-child').removeClass('_selected');
                $select_item.removeClass('_selected _active');
            });

            $file_modules.each(function(){
                var $module = $(this),
                    $input = $module.find('.js-file-check'),
                    $input_base = $input.filter('.js-file-start'),
                    $privew_list = $module.find('.js-file-preview-list');

                $module.removeClass('_onload _full');
                $input.not($input_base).remove();
                $input_base.replaceWith($input_base.clone(true).val(''));
                $privew_list.html('');
            });
        },

        //send data without form (add in favorite etc.)
        init_ajax_without_form: function() {
            form_adjuster.$btn_without_form.click(function(e) {
                e.preventDefault();

                var json = JSON.parse($(this).attr('data-json'));

                form_adjuster.form_send(JSON.stringify(json.parameters), json.action);
            });
        },

        //send form without custom ajax
        init_btn_no_ajax: function() {
            form_adjuster.$noajax_btn.click(function(e) {
                e.preventDefault();

                var $form = $(this).closest('form');

                $form.submit();
            })
        },

        //possible enter only number in input
        number_only_init: function() {
            $(document).on('keydown','.js-number-only, .userphone', function(event) {
                if (event.keyCode == 46 || event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 27 ||
                    (event.keyCode == 65 && event.ctrlKey === true) ||
                    (event.keyCode >= 35 && event.keyCode <= 39)) {
                    return;
                } else {
                    if ((event.keyCode < 48 || event.keyCode > 57) && (event.keyCode < 96 || event.keyCode > 105)) {
                        event.preventDefault();
                    }
                }
            });
        },

        send_validation: function() {
            // $.validator.messages.required = '';

            jQuery.extend(jQuery.validator.messages, {
                equalTo: "Пароли не совпадают",
                minlength: "Минимум 6 символов"
            });

            this.$form.each(function() {
                $(this).validate({

                    errorPlacement: function(error, element) {
                        // error.remove();
                        if(element.hasClass('show-error')){
                            error.insertBefore(element);
                        }
                    },

                    submitHandler: function(form) {
                        form_adjuster.$form_cur = $(form);

                        if(!$(form).hasClass('js-custom-ajax')){
                            form_adjuster.formData_assembly(form);
                        }
                        else{
                            $(form).trigger('custom_ajax');
                        }
                    }
                })
            });
        }


    };
});

jQuery(function($){

    $.fn.isInViewport = function() {
        var elementTop = $(this).offset().top;
        var elementBottom = elementTop + $(this).outerHeight();
        var viewportTop = $(window).scrollTop();
        var viewportBottom = viewportTop + $(window).height();
        return elementBottom > viewportTop && elementTop < viewportBottom;
    };


    var $map_container = $('#map');
    var site_map = {
        init:function(){
            this.init_cache();
            this.initMap();

        },

        init_cache:function(){
            this.$map = $map_container;
        },

        initMap: function () {




            if (this.$map.length) {
                var coords = JSON.parse(this.$map.attr('data-coords')),
                    markerImg = this.$map.attr('data-marker'),
                    mapZoom = 20;
                if(this.$map.attr('data-zoom')){
                    mapZoom = parseInt(this.$map.attr('data-zoom'));
                }

                var markers = coords,

                    coordinates = {
                        lat: (markers[0].lat),
                        lng: (markers[0].lng)
                    },

                    markerImage = markerImg,

                    zoom = mapZoom,
                    $map = document.getElementById('map');


                if ($($map).length) {
                    if (typeof google !== 'undefined') {
                        var map = new google.maps.Map($map, {
                                center: coordinates,
                                zoom: zoom,
                                disableDefaultUI: true,
                                scrollwheel: false,
                                zoomControl: true,
                                zoomControlOptions: {
                                    style: google.maps.ZoomControlStyle.DEFAULT,
                                    position: google.maps.ControlPosition.RIGHT_BOTTOM
                                }
                            }),
                            marker = null;

                        setMarkerOptions();
                        // map.setOptions({styles: styles});

                        function setMarkerOptions(image) {
                            $.each(markers, function (key, item) {
                                marker = new google.maps.Marker({
                                    position: item,
                                    map: map,
                                    icon: markerImage,

                                    animation: google.maps.Animation.DROP
                                });
                            });
                        }


                    } else {
                        $($map).parent().addClass('_bg-map');
                    }
                }
            }
        }
    };

    //+b#map.map(data-coords='[{"lat" : 39.5698455, "lng" : 2.6478934}]' data-marker="images/map/marker.png" )

    if ($map_container.length > 0) {
        $map_container.one('inview', function() {
            var detectMap = setInterval(function() {
                if (typeof google === 'object') {
                    site_map.init();
                    clearInterval(detectMap);
                }
            }, 200);
        });
    }
});


jQuery(function($){

    var popup = {
        init:function(){
            this.init_cache();
            this.events();
        },

        init_cache:function(){
            this.$overlay   = $('.js-overlay');
            this.$btn_close = $('.js-close-popup');
            this.$popup     = $('.js-popup');
            this.$btn       = $('.js-open-popup');
        },

        events:function(){


            popup.$btn.click(function (e) {
                e.preventDefault();
                var $popupName  = $(this).data('popup'),
                    $popup      = popup.$popup.filter('[data-id = ' + $popupName + ']');

                $popup.add(popup.$overlay).addClass('_active');
            });

            popup.$btn_close.click(function () {
                popup.close_popup();
            });

        },

        close_popup:function(){
            var $popup_active = $('.js-popup._active');

            popup.$overlay.removeClass('_active');
            $popup_active.add($('.js-thx')).removeClass('_active');
        }

    };

    popup.init();
});

var $_ = {
    init: function () {
        this.initCache();
        this.initForms();
        this.initEvents();
        this.initMenu();
        this.navToggle();
        this.initCustomSelect();
        this.initAnimatedBlocks();
        this.anchor();
        this.liftUp();

    },
    initCache: function () {

        //select
        this.$selectInner       = $('.js-select-inner');
        this.$customSelect      = $('.js-custom-select');
        this.$options           = $('.js-option');

        //nav
        this.$hamburger         = $('.js-hamburger');
        this.$nav               = $('.js-nav');

        this.$animationBlock    = $('.js-animation-block');
        this.$animationOnLoad   = $('.js-animation-block-load');

    },

    liftUp: function () {
        var $liftUp = $('.js-up');

        $(window).scroll(function(){
            if ($(this).scrollTop() > 300) {
                $liftUp.fadeIn();
            } else {
                $liftUp.fadeOut();
            }
        });


        $liftUp.click(function(){
            $("html, body").animate({ scrollTop: 0 }, 600);
            return false;
        });

    },

    navToggle: function () {
        $_.$hamburger.click(function () {
            $(this).add($_.$nav).toggleClass('_active');
        });
    },

    anchor: function () {

        console.log(window.location.pathname)

        $(".js-nav").on("click","a", function (e) {
            if(window.location.pathname.length <=1) {
                e.preventDefault();
                var id  = $(this).data('anchor'),
                    top = $(id).offset().top - 60;
                $('body,html').stop().animate({scrollTop: top}, 1500);

                $_.$hamburger.add($_.$nav).removeClass('_active');
            }
        });
    },

    initEvents: function () {

        $('body').on('click', function(e) {
            var $el = $(e.target);

            if (!$el.hasClass('js-body-click-close') && !$el.closest('.js-body-click-close').length) {
                var $elements = $('.js-body-click-close');

                $.each($elements, function (key, item) {
                    var $item = $(item);
                    if (!($item.is('input') && $item.val())) $item.removeClass('_active');
                });
            }
        });

        $('.js-show-map').click(function () {
            $('.js-map').stop().slideToggle();
        })

        // onSelect
    },

    initAnimatedBlocks: function () {
        var $self = this,
            stopScrollingDelay = 100,
            whileScrollingDelay = 200,
            checkIsReady = true,
            scrollTimer = null,
            pageOffsetTop = null,
            pageOffsetBottom = null;

        switchAnimation();
        $_.$animationOnLoad.addClass('_animate');


        $(window).scroll(function () {
            switchAnimation();
        });

        function switchAnimation() {
            clearTimeout(scrollTimer);
            scrollTimer = setTimeout(function () {
                checkAnimationBlocks();
            }, stopScrollingDelay);

            if (checkIsReady) {
                checkIsReady = false;
                checkAnimationBlocks();

                setTimeout(function () {
                    checkIsReady = true;
                }, whileScrollingDelay)
            }
        }

        function checkAnimationBlocks() {
            pageOffsetTop = $(document).scrollTop();
            pageOffsetBottom = pageOffsetTop + window.innerHeight;

            $self.$animationBlock.each(function () {
                var $el = $(this),
                    blockOffsetTop = $el.offset().top,
                    blockOffsetBottom = blockOffsetTop + $el.height();

                if (blockOffsetBottom < pageOffsetTop) {
                    // $el.removeClass('_animate');
                } else if (blockOffsetTop > pageOffsetBottom) {
                    //$el.removeClass('_animate');
                } else if (blockOffsetTop < pageOffsetBottom) {
                    $el.addClass('_animate');
                }
            });
        }
    },

    initMenu: function () {

    },

    initCustomSelect: function () {
        var $select = this.$customSelect,
            $options = this.$options,
            $selectInner = this.$selectInner;

        $select.on('click', function (e) {
            var $el = $(e.currentTarget),
                $inner = $el.nextAll('.js-select-inner');

            $select.not($el).removeClass('_active');
            $el.toggleClass('_active');
        });

        $options.on('click', function (e) {
            var $el = $(e.currentTarget),
                $inner = $el.closest($selectInner),
                $select = $inner.siblings($select),
                $input = $select.siblings('.js-hidden-input'),
                $textBlock = $select.children(),
                text = $el.text().trim(),
                dataId = $el.data('id');

            $el.addClass('_active').siblings().removeClass('_active');
            $input.attr('value', dataId);
            $textBlock.html(text);
            $select.addClass('_selected');
        });

        $options.each(function () {
            if($(this).data('select')){
                var $el = $(this),
                    $inner = $el.closest($selectInner),
                    $select = $inner.siblings($select),
                    $input = $select.siblings('.js-hidden-input'),
                    $textBlock = $select.children(),
                    text = $el.text().trim(),
                    dataId = $el.data('id');

                $el.addClass('_active').siblings().removeClass('_active');
                $input.attr('value', dataId);
                $textBlock.html(text);
                $select.addClass('_selected');
            }
        })
    },



    initForms: function() {
        form_adjuster.init({
            'file': true,
            'success': function() {
                var $form           = $(form_adjuster.$form_cur),
                    $inputs         = $form.find('input,textarea'),
                    $popups         = $('.js-popup'),
                    $popup_thx      = $('.js-thx'),
                    $popup_overlay  = $('.js-overlay');



                $popups.removeClass('_active');
                $popup_thx.add($_.$popup_overlay).addClass('_active');

                setTimeout(function() {
                    $form.trigger('reset');
                    $inputs.removeClass('valid error active _active');
                }, 500);

                setTimeout(function() {
                    if ($popup_thx.hasClass('_active')) {
                        $popup_thx.add($popup_overlay).removeClass('_active');
                    }
                }, 4000)
            }
        });
    },
};


$(document).ready(function () {
    $_.init();
});

jQuery(function($){

    var video_list = {
        init:function(){
            this.api();
            this.init_cache();
            this.video_create();
            this.video_destroy();
            //this.load_preview();
        },

        init_cache:function(){
            this.$item      = $('.js-video-list-item');
            this.$btn       = $('.js-video-link');
            this.$overlay   = $('.js-overlay');
            this.$btn_close = $('.js-close-popup');
            this.$prev      = $('.js-video-prev');
            this.player;
        },



        api:function(){
            var tag = document.createElement('script');
            tag.src = "https://www.youtube.com/iframe_api?enablejsapi=1";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        },

        video_init:function(id){
            var domen = window.location.hostname;

            video_list.player = new YT.Player('js-video-wrap', {
                height: '480',
                width: '720',
                videoId: id,
                playerVars: {
                    'origin': domen,
                    autoplay: 1
                }
            });
        },

        load_preview:function(){
            video_list.$prev.each(function(){
                var $link = $(this),
                    id = video_list.$btn.attr('data-video'),
                    $img = $link.find('.js-object-fit');

                $img.attr('src', 'https://img.youtube.com/vi/' + id + '/0.jpg');
            })
        },


        video_create:function(){
            video_list.$btn.click(function(){
                var $btn = $(this),
                    id = $btn.attr('data-video');

                video_list.video_init(id);
            })
        },

        video_destroy:function(){

            video_list.$btn_close.click(function(){
                video_list.video_close();
            });
        },

        video_close:function(){
            var $popup_active = $('.js-popup._active');

            if($popup_active.hasClass('js-popup-video')){
                video_list.player.destroy();
            }
        }
    };

    $(document).ready(function() {
        video_list.init();
    });
});